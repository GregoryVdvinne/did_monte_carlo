true_effect = c(rep(0,4),
(e_20+e_21+e_22+e_23)/4,
(e_21+e_22+e_23)/3,
(e_22+e_23)/2,
e_23)
)
myData2 <- myData %>%
mutate(revenue = rnorm(1, mean = 1000000, sd =100000) +
50000*urban +
#treatment effect dependent on year
case_when(
year == 2019 ~ 0,
year == 2020 ~ treated*e_20,
year == 2021 ~ treated*e_21,
year == 2022 ~ treated*e_22,
year == 2023 ~ treated*e_23
)
)
#Without conditioning on covariates
output <- event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
data = myData2
) %>%
filter(estimator %in% c("TWFE", "Gardner (2021)", "Callaway and Sant'Anna (2020)"))
output <- left_join(output, true_effect, by = "term")
#Plot the results
plot_event_study(output)
#Plot the results
plot_event_study(output) +
theme_bw()
#Plot the results
plot_event_study(output) +
geom_line(x = term, y=true_effect)
#Plot the results
plot_event_study(output) +
geom_line(aes(x = term, y=true_effect))
#Plot the results
plot_event_study(output) +
geom_point(aes(x = term, y=true_effect))
#Plot the results
plot_event_study(output) +
geom_point(aes(x = term, y=true_effect), color = "red")
#Plot the results
plot_event_study(output) +
geom_point(aes(x = term, y=true_effect), color = "red", shape = 15)
#Plot the results
plot_event_study(output) +
geom_point(aes(x = term, y=true_effect), color = "red", shape = 14)
#Plot the results
plot_event_study(output) +
geom_point(aes(x = term, y=true_effect), color = "red", shape = 16)
#Plot the results
plot_event_study(output) +
geom_point(aes(x = term, y=true_effect), color = "red", shape = 17)
#Effect that treatment has in each year
e_20 <- 50000
e_21 <- 100000
e_22 <- 150000
e_23 <- 200000
true_effect <- data.table(
term = -4:3,
true_effect = c(rep(0,4),
(e_20+e_21+e_22+e_23)/4,
(e_21+e_22+e_23)/3,
(e_22+e_23)/2,
e_23)
)
myData2 <- myData %>%
mutate(revenue = rnorm(1, mean = 1000000, sd =100000) +
50000*urban +
#treatment effect dependent on year
case_when(
year == 2019 ~ 0,
year == 2020 ~ treated*e_20,
year == 2021 ~ treated*e_21,
year == 2022 ~ treated*e_22,
year == 2023 ~ treated*e_23
)
)
#Without conditioning on covariates
output <- event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
data = myData2
) %>%
filter(estimator %in% c("TWFE", "Gardner (2021)", "Callaway and Sant'Anna (2020)"))
output <- left_join(output, true_effect, by = "term")
#Plot the results
plot_event_study(output) +
geom_point(aes(x = term, y=true_effect), color = "red", shape = 17)
#Plot the results
plot_event_study(output) +
geom_line(aes(x = term, y=true_effect), color = "red")
#Clear memory
rm(list = ls(all=T))
#Load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
tidyverse,  # Grammar for data + ggplot2
did,        # Callaway and Sant'Anna
did2s,      # Gardner
data.table, # data tables
knitr       # Print pretty tables
)
#Set some output options
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.width = 10, fig.height = 7)
#Set number of units and periods
n.units <- 5000
n.periods <- 5
#First column
myData <- as.data.frame(rep(1:n.units, n.periods))
colnames(myData) <- "id"
#For reproducibility
set.seed(97)
#Add other columns
myData <- myData %>%
arrange(by=id) %>%
cbind(year = rep(2019:(2019+n.periods-1),n.units)) %>% #Add periods
group_by(id) %>%
mutate(g = case_when(
id %in% (1:n.units/2) ~ 0, #50% untreated
id %in% ((n.units/2+1):(n.units/2+n.units/(n.periods-1)/2)) ~ 2020,
id %in% ((n.units/2+n.units/(n.periods-1)/2+1):(n.units/2+n.units*2/(n.periods-1)/2)) ~ 2021,
id %in% ((n.units/2+n.units*2/(n.periods-1)/2+1):(n.units/2+n.units*3/(n.periods-1)/2)) ~ 2022,
TRUE ~ 2023
), # Assign to treatment groups
urban = case_when(g==0 ~ sample(c(0,0,1),1),
TRUE ~ sample(c(0,1,1),1)) # Urban locations twice as likely to be treated
) %>%
rowwise() %>%
mutate(treated = case_when(g<=year & g!=0 ~ 1,
TRUE ~ 0),
revenue = (rnorm(1, mean = 1000000, sd =100000) + #Average revenue of 1M plus...
50000*urban + # additional 100k if in urban area
100000*treated # treatment effect: 100k
)
)
#Filter down to the five observations for one treated individual
myData %>%
ungroup() %>%
filter(g==0, urban == 0)%>%
slice_head(n=5) %>%
#Stack on top of five obs for one untreated individual
rbind(
#Filter down to the five observations for one individual treated in 2017
myData %>%
ungroup() %>%
filter(g==2021, urban==1)%>%
slice_head(n=5)
) %>%
mutate(revenue = scales::dollar(revenue)) %>%
#Print as a table
kable(
align = "l",
caption = "Data for One Store That Adopts the Technology and One that Does Not",
col.names = c("ID","Year","Treatment Group","Urban Dummy","Treated Yet", "Revenue")
)
myData %>%
group_by(treated, urban) %>%
summarise(Revenue = mean(revenue) %>% scales::dollar()) %>%
kable(
align = "l",
caption = "Mean Revenue by Treatment Status and Whether Stores are Urban",
col.names = c("Treated","Urban Dummy", "Mean Revenue")
)
myData %>%
group_by(g, urban) %>%
summarise(Count = n()) %>%
kable(
align = "l",
caption = "In Each Treatment Group by Urban Dummy ",
col.names = c("Treatment Group", "Urban Dummy", "Count")
)
#Without conditioning on covariates
output <- event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
data = myData
) %>%
filter(estimator %in% c("TWFE", "Gardner (2021)", "Callaway and Sant'Anna (2020)"))
#Plot the results
plot_event_study(output)
#Effect that treatment has in each year
e_20 <- 50000
e_21 <- 100000
e_22 <- 150000
e_23 <- 200000
true_effect <- data.table(
term = -4:3,
true_effect = c(rep(0,4),
(e_20+e_21+e_22+e_23)/4,
(e_21+e_22+e_23)/3,
(e_22+e_23)/2,
e_23)
)
myData2 <- myData %>%
mutate(revenue = rnorm(1, mean = 1000000, sd =100000) +
50000*urban +
#treatment effect dependent on year
case_when(
year == 2019 ~ 0,
year == 2020 ~ treated*e_20,
year == 2021 ~ treated*e_21,
year == 2022 ~ treated*e_22,
year == 2023 ~ treated*e_23
)
)
#Without conditioning on covariates
output <- event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
data = myData2
) %>%
filter(estimator %in% c("TWFE", "Gardner (2021)", "Callaway and Sant'Anna (2020)"))
output <- left_join(output, true_effect, by = "term")
#Plot the results
plot_event_study(output) +
geom_line(aes(x = term, y=true_effect), color = "red")
#Add the covariate indicating whether location is in Canada
myData <- myData %>%
group_by(id) %>%
mutate(canada = case_when(
treated == 1 ~ sample(0,0,0,1)
treated == 0 ~ sample(0,1,1,1)
#Add the covariate indicating whether location is in Canada
myData <- myData %>%
group_by(id) %>%
mutate(canada = case_when(
treated == 1 ~ sample(0,0,0,1),
treated == 0 ~ sample(0,1,1,1)
),
revenue = rnorm(1, mean = 1000000, sd =100000) +
50000*urban +
#Effect of canada covariate dependent on year
case_when(
year == 2019 ~ canada*25000,
year == 2020 ~ canada*0,
TRUE ~ (1-canada)*50000
)
)
View(myData)
#Add the covariate indicating whether location is in Canada
myData <- myData %>%
group_by(id) %>%
mutate(canada = case_when(
treated == 1 ~ sample(0,0,0,1),
treated == 0 ~ sample(0,1,1,1)
)
) %>%
ungroup() %>%
mutate(revenue = rnorm(1, mean = 1000000, sd =100000) +
50000*urban +
#Effect of canada covariate dependent on year
case_when(
year == 2019 ~ canada*25000,
year == 2020 ~ canada*0,
TRUE ~ (1-canada)*50000
)
)
myData <- myData %>%
group_by(id) %>%
mutate(canada = case_when(
treated == 1 ~ sample(0,0,0,1),
treated == 0 ~ sample(0,1,1,1)
)
)
#Add the covariate indicating whether location is in Canada
myData <- myData %>%
group_by(id) %>%
mutate(canada = case_when(
treated == 1 ~ sample(c(0,0,0,1),1),
treated == 0 ~ sample(c(0,1,1,1),1)
)
) %>%
ungroup() %>%
mutate(revenue = rnorm(1, mean = 1000000, sd =100000) +
50000*urban +
#Effect of canada covariate dependent on year
case_when(
year == 2019 ~ canada*25000,
year == 2020 ~ canada*0,
TRUE ~ (1-canada)*50000
)
)
View(myData)
#Add the covariate indicating whether location is in Canada
myData <- myData %>%
group_by(id) %>%
mutate(canada = case_when(
treated == 1 ~ sample(c(0,0,0,1),1),
treated == 0 ~ sample(c(0,1,1,1),1)
)
) %>%
rowwise() %>%
mutate(revenue = rnorm(1, mean = 1000000, sd =100000) +
50000*urban +
#Effect of canada covariate dependent on year
case_when(
year == 2019 ~ canada*25000,
year == 2020 ~ canada*0,
TRUE ~ (1-canada)*50000
)
)
View(myData)
myData %>%
group_by(year, canada, treated) %>%
summarise(revenue = mean(revenue))
inspection <- myData %>%
group_by(year, canada, treated) %>%
summarise(revenue = mean(revenue))
View(inspection)
#Add the covariate indicating whether location is in Canada
myData <- myData %>%
group_by(id) %>%
mutate(canada = case_when(
treated == 1 ~ sample(c(0,0,0,1),1),
treated == 0 ~ sample(c(0,1,1,1),1)
)
) %>%
rowwise() %>%
mutate(revenue = rnorm(1, mean = 1000000, sd =100000) +
50000*urban +
#Effect of canada covariate dependent on year
case_when(
year == 2019 ~ canada*25000,
year == 2020 ~ canada*0,
TRUE ~ (1-canada)*50000
) +
100000*treated
) %>%
ungroup()
inspection <- myData %>%
group_by(year, canada, treated) %>%
summarise(revenue = mean(revenue))
?sapply
#Clear memory
rm(list = ls(all=T))
#Load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
tidyverse,  # Grammar for data + ggplot2
did,        # Callaway and Sant'Anna
did2s,      # Gardner
data.table, # data tables
knitr       # Print pretty tables
)
#Set some output options
knitr::opts_chunk$set(include = TRUE, warning = FALSE, message = FALSE,
fig.width = 10, fig.height = 7)
#Without conditioning on covariates
output <- event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
xformla = ~NULL,
data = myData
) %>%
filter(estimator %in% c("TWFE", "Gardner (2021)", "Callaway and Sant'Anna (2020)"))
#Clear memory
rm(list = ls(all=T))
#Load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
tidyverse,  # Grammar for data + ggplot2
did,        # Callaway and Sant'Anna
did2s,      # Gardner
data.table, # data tables
knitr       # Print pretty tables
)
#Set some output options
knitr::opts_chunk$set(include = TRUE, warning = FALSE, message = FALSE,
fig.width = 10, fig.height = 7)
# my_event_study <- function(method) {
#   event_study(
#
#   )
# }
#Set number of units and periods
n.units <- 5000
n.periods <- 5
#First column
myData <- as.data.frame(rep(1:n.units, n.periods))
colnames(myData) <- "id"
#For reproducibility
set.seed(97)
#Add other columns
myData <- myData %>%
arrange(by=id) %>%
cbind(year = rep(2019:(2019+n.periods-1),n.units)) %>% #Add periods
group_by(id) %>%
mutate(g = case_when(
id %in% (1:n.units/2) ~ 0, #50% untreated
id %in% ((n.units/2+1):(n.units/2+n.units/(n.periods-1)/2)) ~ 2020,
id %in% ((n.units/2+n.units/(n.periods-1)/2+1):(n.units/2+n.units*2/(n.periods-1)/2)) ~ 2021,
id %in% ((n.units/2+n.units*2/(n.periods-1)/2+1):(n.units/2+n.units*3/(n.periods-1)/2)) ~ 2022,
TRUE ~ 2023
), # Assign to treatment groups
urban = case_when(g==0 ~ sample(c(0,0,1),1),
TRUE ~ sample(c(0,1,1),1)) # Urban locations twice as likely to be treated
) %>%
rowwise() %>%
mutate(treated = case_when(g<=year & g!=0 ~ 1,
TRUE ~ 0),
revenue = (rnorm(1, mean = 1000000, sd =100000) + #Average revenue of 1M plus...
50000*urban + # additional 100k if in urban area
100000*treated # treatment effect: 100k
)
)
#Filter down to the five observations for one treated individual
myData %>%
ungroup() %>%
filter(g==0, urban == 0)%>%
slice_head(n=5) %>%
#Stack on top of five obs for one untreated individual
rbind(
#Filter down to the five observations for one individual treated in 2017
myData %>%
ungroup() %>%
filter(g==2021, urban==1)%>%
slice_head(n=5)
) %>%
mutate(revenue = scales::dollar(revenue)) %>%
#Print as a table
kable(
align = "l",
caption = "Data for One Store That Adopts the Technology and One that Does Not",
col.names = c("ID","Year","Treatment Group","Urban Dummy","Treated Yet", "Revenue")
)
myData %>%
group_by(treated, urban) %>%
summarise(Revenue = mean(revenue) %>% scales::dollar()) %>%
kable(
align = "l",
caption = "Mean Revenue by Treatment Status and Whether Stores are Urban",
col.names = c("Treated","Urban Dummy", "Mean Revenue")
)
myData %>%
group_by(g, urban) %>%
summarise(Count = n()) %>%
kable(
align = "l",
caption = "In Each Treatment Group by Urban Dummy ",
col.names = c("Treatment Group", "Urban Dummy", "Count")
)
#Without conditioning on covariates
output <- event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
xformla = ~NULL,
data = myData
) %>%
filter(estimator %in% c("TWFE", "Gardner (2021)", "Callaway and Sant'Anna (2020)"))
#Plot the results
plot_event_study(output)
my_event_study <- function(estimator, xformla = ~NULL) {
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
xformla = xformla,
estimator = estimator,
data = myData
)
}
output <- sapply(c("TWFE","Gardner (2021)", "Callaway and Sant'Anna (2020)"),
my_event_study)
list("a","b","c")
output <- sapply(list("TWFE","Gardner (2021)", "Callaway and Sant'Anna (2020)"),
my_event_study)
list("TWFE","Gardner (2021)", "Callaway and Sant'Anna (2020)")
my_event_study <- function(estimator) {
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = estimator,
data = myData
)
}
output <- sapply(list("TWFE","Gardner (2021)", "Callaway and Sant'Anna (2020)"),
my_event_study)
output <- sapply(list("TWFE","did2s", "did"),
my_event_study)
output <- sapply(list("TWFE","did2s", "did"),
my_event_study)
View(output)
output <- lapply(list("TWFE","did2s", "did"),
my_event_study)
test <- as.data.frame(output)
View(output)
output <- sapply(list("TWFE","did2s", "did"),
my_event_study)
test <- as.data.frame(output)
View(test)
test <- unlist(output)
test <- rbind_all(output)
View(output)
View(output)
