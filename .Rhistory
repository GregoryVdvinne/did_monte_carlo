+ policy * -200000
+ treated * 100000
+ rnorm(n=1, mean =0, sd = 100000) # error w/ mean 0 & sd= 100k
)
}
#A function to run a simulation 1 time and run estimators
get_est_4 <- function(...) { # '...' must be included for map_dfr to work
myData <- create_data_4()
#Run our three estimators
output_conditional <- my_event_study(myData, xformla = ~policy, true_effect = true_effect) %>%
mutate(conditioning = 1)
output_unconditional <- my_event_study(myData, true_effect = true_effect) %>%
mutate(conditioning = 0)
rbind(output_conditional, output_unconditional)
}
#For reproducibility
set.seed(123)
#Run simulation multiple times & save mean output.
output <- map_dfr(1:n_sim, get_est_4) %>% #Run sim n_sim times & rbind() outputs
group_by(term, estimator, conditioning) %>%
summarise(across(everything(), mean))
#Plot results w/o conditioning in policy variable
plot_event_study(output %>% filter(conditioning == 0)) +
geom_line(aes(x = term,  y=true_effect), color = "red")
#Plot results w/ conditioning in policy variable
plot_event_study(output %>% filter(conditioning == 1)) +
geom_line(aes(x = term,  y=true_effect), color = "red")
View(output)
### To do:
# Look into using map_dfr to bind multiple runs of the sim together
# Make own plotting function. Would include using summarise to average across sim runs
# Treatment that 'turns off'
#Clear memory
rm(list = ls(all=T))
#Load packages and install if not installed
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
tidyverse,  # Grammar for data + ggplot2
did,        # Callaway and Sant'Anna
did2s,      # Gardner
data.table, # easy to make data tables
knitr       # Print pretty tables
)
#Set some output options
knitr::opts_chunk$set(include = TRUE, warning = FALSE, message = FALSE,
fig.width = 10, fig.height = 7)
my_event_study <- function(data, xformla = NULL, true_effect) {
rbind(
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "TWFE",
xformla = xformla,
data = data
),
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did2s",
xformla = xformla,
data =data
),
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did",
xformla = xformla,
data = data
)
) %>%
left_join(true_effect, by = "term")
}
#Set number of units, periods and simulations
n_units <- 1000
n_periods <- 5
n_sim <- 3
#Create data for simulation 1
create_data_1 <- function(n.units= n_units, n.periods=n_periods) {
#First column
myData <- as.data.frame(rep(1:n.units, n.periods))
colnames(myData) <- "id"
myData %>%
arrange(by=id) %>%
cbind(year = rep(2019:(2019+n.periods-1),n.units)) %>% #Add periods
group_by(id) %>%
mutate(g = case_when(        #Assign to treatment groups
id %in% (1:n.units/2) ~ 0, #50% untreated
id %in% ((n.units/2+1):(n.units/2+n.units/(n.periods-1)/2)) ~ 2020,
id %in% ((n.units/2+n.units/(n.periods-1)/2+1):(n.units/2+n.units*2/(n.periods-1)/2)) ~ 2021,
id %in% ((n.units/2+n.units*2/(n.periods-1)/2+1):(n.units/2+n.units*3/(n.periods-1)/2)) ~ 2022,
TRUE ~ 2023
),
urban = case_when(g==0 ~ sample(c(0,0,1),1),
TRUE ~ sample(c(0,1,1),1)) # Urban locations twice as likely to be treated
) %>%
rowwise() %>%
mutate(treated = case_when(g<=year & g!=0 ~ 1,
TRUE ~ 0),
revenue = 1000000 + #1M intercept plus:
50000*urban + # additional 50k if in urban area
100000*treated + # treatment effect: 100k
rnorm(n=1, mean =0, sd = 100000) # mean 0 error w/ sd= 100k
)
}
#For reproducibility
set.seed(123)
#Create example of one run of simulated data
myData <- create_data_1()
## A glimpse of the data ##
#Filter down to the five observations for one treated individual
myData %>%
ungroup() %>%
filter(g==0, urban == 0)%>%
slice_head(n=5) %>%
#Stack on top of five obs for one untreated individual
rbind(
#Filter down to the five observations for one individual treated in 2017
myData %>%
ungroup() %>%
filter(g==2021, urban==1)%>%
slice_head(n=5)
) %>%
mutate(revenue = scales::dollar(revenue)) %>%
#Print as a table
kable(
align = "l",
caption = "Data for One Store That Adopts the Technology and One that Does Not",
col.names = c("ID","Year","Treatment Group","Urban Dummy","Treated Yet", "Revenue")
)
myData %>%
group_by(treated, urban) %>%
summarise(Revenue = mean(revenue) %>% scales::dollar()) %>%
kable(
align = "l",
caption = "Mean Revenue by Treatment Status and Whether Stores are Urban",
col.names = c("Treated","Urban Dummy", "Mean Revenue")
)
myData %>%
group_by(g, urban) %>%
summarise(Count = n()) %>%
kable(
align = "l",
caption = "Unit-Period Observations in Each Treatment Group by Urban Dummy ",
col.names = c("Treatment Group", "Urban Dummy", "Count")
)
#Save true effect
true_effect <- data.table(
term = -4:3,
true_effect = c(rep(0,4),rep(100000,4))
)
#A function to run a simulation 1 time and run estimators
get_est_1 <- function(...) { # '...' must be included for map_dfr to work
myData <- create_data_1()
#Run our three estimators
output <- my_event_study(myData, true_effect = true_effect)
output
}
#For reproducibility
set.seed(123)
#Run simulation multiple times & save mean output.
output <- map_dfr(1:n_sim, get_est_1) %>% #Run sim n_sim times & rbind() outputs
group_by(term, estimator) %>%
summarise(across(everything(), mean))
#Plot the estimates
plot_event_study(output) +
geom_line(aes(x = term, y=true_effect), color = "red")
#Effect that treatment has in each year
e_20 <- 50000
e_21 <- 100000
e_22 <- 150000
e_23 <- 200000
#Create data for simulation 2
create_data_2 <- function(n.units= n_units, n.periods=n_periods) {
#First column
myData <- as.data.frame(rep(1:n.units, n.periods))
colnames(myData) <- "id"
myData %>%
arrange(by=id) %>%
cbind(year = rep(2019:(2019+n.periods-1),n.units)) %>% #Add periods
group_by(id) %>%
mutate(g = case_when(        #Assign to treatment groups
id %in% (1:n.units/2) ~ 0, #50% untreated
id %in% ((n.units/2+1):(n.units/2+n.units/(n.periods-1)/2)) ~ 2020,
id %in% ((n.units/2+n.units/(n.periods-1)/2+1):(n.units/2+n.units*2/(n.periods-1)/2)) ~ 2021,
id %in% ((n.units/2+n.units*2/(n.periods-1)/2+1):(n.units/2+n.units*3/(n.periods-1)/2)) ~ 2022,
TRUE ~ 2023
),
urban = case_when(g==0 ~ sample(c(0,0,1),1),
TRUE ~ sample(c(0,1,1),1)) # Urban locations twice as likely to be treated
) %>%
rowwise() %>%
mutate(treated = case_when(g<=year & g!=0 ~ 1,
TRUE ~ 0),
revenue = 1000000 + #1M intercept
50000*urban +
#treatment effect dependent on year
case_when(
year == 2019 ~ 0,
year == 2020 ~ treated*e_20,
year == 2021 ~ treated*e_21,
year == 2022 ~ treated*e_22,
year == 2023 ~ treated*e_23
) +
rnorm(n=1, mean =0, sd = 100000) # error w/ mean 0 & sd= 100k
)
}
#Calculate true effect and save
true_effect <- data.table(
term = -4:3,
true_effect = c(rep(0,4),
(e_20+e_21+e_22+e_23)/4,
(e_21+e_22+e_23)/3,
(e_22+e_23)/2,
e_23)
)
#A function to run a simulation 1 time and run estimators
get_est_2 <- function(...) { # '...' must be included for map_dfr to work
myData <- create_data_2()
#Run our three estimators
output <- my_event_study(myData, true_effect = true_effect)
output
}
#For reproducibility
set.seed(123)
#Run simulation multiple times & save mean output.
output <- map_dfr(1:n_sim, get_est_2) %>% #Run sim n_sim times & rbind() outputs
group_by(term, estimator) %>%
summarise(across(everything(), mean))
#Plot the results
plot_event_study(output) +
geom_line(aes(x = term, y=true_effect), color = "red")
#Create data for simulation 3
create_data_3 <- function(n.units= n_units, n.periods=n_periods) {
#First column
myData <- as.data.frame(rep(1:n.units, n.periods))
colnames(myData) <- "id"
myData %>%
arrange(by=id) %>%
cbind(year = rep(2019:(2019+n.periods-1),n.units)) %>% #Add periods
group_by(id) %>%
mutate(g = case_when(        #Assign to treatment groups
id %in% (1:n.units/2) ~ 0, #50% untreated
id %in% ((n.units/2+1):(n.units/2+n.units/(n.periods-1)/2)) ~ 2020,
id %in% ((n.units/2+n.units/(n.periods-1)/2+1):(n.units/2+n.units*2/(n.periods-1)/2)) ~ 2021,
id %in% ((n.units/2+n.units*2/(n.periods-1)/2+1):(n.units/2+n.units*3/(n.periods-1)/2)) ~ 2022,
TRUE ~ 2023
),
urban = case_when(g==0 ~ sample(c(0,0,1),1),
TRUE ~ sample(c(0,1,1),1)
), # Urban locations twice as likely to be treated
usa = case_when(g == 0 ~ sample(c(0,0,0,1),1),
TRUE ~ sample(c(0,1,1,1),1)
) #American locations thrice as likely to be treated
) %>%
rowwise() %>%
mutate(treated = case_when(g<=year & g!=0 ~ 1,
TRUE ~ 0),
revenue = 1000000 +
50000*urban +
#Effect of canada covariate dependent on year
case_when(
year == 2019 ~ usa*-50000,
year == 2020 ~ usa*0,
TRUE ~  usa*50000
) +
100000*treated +
rnorm(n=1, mean =0, sd = 100000) # error w/ mean 0 & sd= 100k
)
}
#Save true effect
true_effect <- data.table(
term = -4:3,
true_effect = c(rep(0,4),rep(100000,4))
)
#A function to run a simulation 1 time and run estimators
get_est_3 <- function(...) { # '...' must be included for map_dfr to work
myData <- create_data_3()
#Run our three estimators
output <- my_event_study(myData, true_effect = true_effect)
output
}
#For reproducibility
set.seed(123)
#Run simulation multiple times & save mean output.
output <- map_dfr(1:n_sim, get_est_3) %>% #Run sim n_sim times & rbind() outputs
group_by(term, estimator) %>%
summarise(across(everything(), mean))
plot_event_study(output) +
geom_line(aes(x = term, y=true_effect), color = "red")
#A function to run a simulation 1 time and run estimators
get_est_cs_3 <- function(...) { # '...' must be included for map_dfr to work
myData <- create_data_3()
#Run our three estimators
output <- event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did",
xformla = ~ usa,
data = myData
)
output
}
#For reproducibility
set.seed(123)
#Run simulation multiple times & save mean output.
output <- map_dfr(1:n_sim, get_est_cs_3) %>% #Run sim n_sim times & rbind() outputs
group_by(term, estimator) %>%
summarise(across(everything(), mean))
#Add column for true effect to DF of estimates
output <- left_join(output, true_effect, by = "term")
plot_event_study(output) +
geom_line(aes(x = term, y=true_effect), color = "red")
# #For reproducibility
# set.seed(123)
#
# #Add our policy variable and calculate our new revenue
# myData <-  myData %>%
#   group_by(id) %>%
#   mutate(policy_year = case_when(
#                                  usa == 1 ~ sample(c(2019,2020,2021,2022,2023, rep(0,15)),1),
#                                  usa == 0 ~ sample(c(2019,2020,2021,2022,2023, rep(0,5)),1)
#                                  )
#          )%>%
#   rowwise() %>%
#   mutate(policy = case_when(policy_year<=year & policy_year !=0 ~ 1,
#                             TRUE ~ 0),
#          revenue = 1000000
#                    + policy * -200000
#                    + treated * 100000
#                    + rnorm(n=1, mean =0, sd = 100000) # error w/ mean 0 & sd= 100k
#   )
#
# output <- my_event_study(myData, true_effect = true_effect)
#
# plot_event_study(output) +
#   geom_line(aes(x = term, y=true_effect), color = "red")
#
# #Estimate model with conditioning on policy variable
# output <- my_event_study(myData, xformla = ~policy, true_effect = true_effect)
#
# plot_event_study(output) +
#   geom_line(aes(x = term, y=true_effect), color = "red")
#Create data for simulation 3
create_data_4 <- function(n.units= n_units, n.periods=n_periods) {
#First column
myData <- as.data.frame(rep(1:n.units, n.periods))
colnames(myData) <- "id"
myData %>%
arrange(by=id) %>%
cbind(year = rep(2019:(2019+n.periods-1),n.units)) %>% #Add periods
group_by(id) %>%
mutate(g = case_when(        #Assign to treatment groups
id %in% (1:n.units/2) ~ 0, #50% untreated
id %in% ((n.units/2+1):(n.units/2+n.units/(n.periods-1)/2)) ~ 2020,
id %in% ((n.units/2+n.units/(n.periods-1)/2+1):(n.units/2+n.units*2/(n.periods-1)/2)) ~ 2021,
id %in% ((n.units/2+n.units*2/(n.periods-1)/2+1):(n.units/2+n.units*3/(n.periods-1)/2)) ~ 2022,
TRUE ~ 2023
),
usa = case_when(g == 0 ~ sample(c(0,0,0,1),1),
TRUE ~ sample(c(0,1,1,1),1)
), #American locations thrice as likely to be treated
policy_year = case_when(
usa == 1 ~ sample(c(2019,2020,2021,2022,2023, rep(0,15)),1),
usa == 0 ~ sample(c(2019,2020,2021,2022,2023, rep(0,5)),1)
)
) %>%
rowwise() %>%
mutate(treated = case_when(g<=year & g!=0 ~ 1,
TRUE ~ 0),
policy = case_when(policy_year<=year & policy_year !=0 ~ 1,
TRUE ~ 0),
revenue = 1000000
+ policy * -200000
+ treated * 100000
+ rnorm(n=1, mean =0, sd = 100000) # error w/ mean 0 & sd= 100k
)
}
#A function to run a simulation 1 time and run estimators
get_est_4 <- function(...) { # '...' must be included for map_dfr to work
myData <- create_data_4()
#Run our three estimators
output_conditional <- my_event_study(myData, xformla = ~policy, true_effect = true_effect) %>%
mutate(conditioning = 1)
output_unconditional <- my_event_study(myData, true_effect = true_effect) %>%
mutate(conditioning = 0)
rbind(output_conditional, output_unconditional)
}
#For reproducibility
set.seed(123)
#Run simulation multiple times & save mean output.
output <- map_dfr(1:n_sim, get_est_4) %>% #Run sim n_sim times & rbind() outputs
group_by(term, estimator, conditioning) %>%
summarise(across(everything(), mean))
#Plot results w/o conditioning in policy variable
plot_event_study(output %>% filter(conditioning == 0)) +
geom_line(aes(x = term,  y=true_effect), color = "red")
#Plot results w/ conditioning in policy variable
plot_event_study(output %>% filter(conditioning == 1)) +
geom_line(aes(x = term,  y=true_effect), color = "red")
output <- get_est_4()
View(output)
#Plot results w/o conditioning in policy variable
plot_event_study(filter(output, conditioning == 0)) +
geom_line(aes(x = term,  y=true_effect), color = "red")
#Plot results w/ conditioning in policy variable
plot_event_study(filter(output, conditioning == 1)) +
geom_line(aes(x = term,  y=true_effect), color = "red")
output <- get_est_4()
#Plot results w/o conditioning in policy variable
plot_event_study(filter(output, conditioning == 0)) +
geom_line(aes(x = term,  y=true_effect), color = "red")
#Plot results w/ conditioning in policy variable
plot_event_study(filter(output, conditioning == 1)) +
geom_line(aes(x = term,  y=true_effect), color = "red")
# #For reproducibility
# set.seed(123)
#
# #Add our policy variable and calculate our new revenue
# myData <-  myData %>%
#   group_by(id) %>%
#   mutate(policy_year = case_when(
#                                  usa == 1 ~ sample(c(2019,2020,2021,2022,2023, rep(0,15)),1),
#                                  usa == 0 ~ sample(c(2019,2020,2021,2022,2023, rep(0,5)),1)
#                                  )
#          )%>%
#   rowwise() %>%
#   mutate(policy = case_when(policy_year<=year & policy_year !=0 ~ 1,
#                             TRUE ~ 0),
#          revenue = 1000000
#                    + policy * -200000
#                    + treated * 100000
#                    + rnorm(n=1, mean =0, sd = 100000) # error w/ mean 0 & sd= 100k
#   )
#
# output <- my_event_study(myData, true_effect = true_effect)
#
# plot_event_study(output) +
#   geom_line(aes(x = term, y=true_effect), color = "red")
#
# #Estimate model with conditioning on policy variable
# output <- my_event_study(myData, xformla = ~policy, true_effect = true_effect)
#
# plot_event_study(output) +
#   geom_line(aes(x = term, y=true_effect), color = "red")
#Create data for simulation 3
create_data_4 <- function(n.units= n_units, n.periods=n_periods) {
#First column
myData <- as.data.frame(rep(1:n.units, n.periods))
colnames(myData) <- "id"
myData %>%
arrange(by=id) %>%
cbind(year = rep(2019:(2019+n.periods-1),n.units)) %>% #Add periods
group_by(id) %>%
mutate(g = case_when(        #Assign to treatment groups
id %in% (1:n.units/2) ~ 0, #50% untreated
id %in% ((n.units/2+1):(n.units/2+n.units/(n.periods-1)/2)) ~ 2020,
id %in% ((n.units/2+n.units/(n.periods-1)/2+1):(n.units/2+n.units*2/(n.periods-1)/2)) ~ 2021,
id %in% ((n.units/2+n.units*2/(n.periods-1)/2+1):(n.units/2+n.units*3/(n.periods-1)/2)) ~ 2022,
TRUE ~ 2023
),
usa = case_when(g == 0 ~ sample(c(0,0,0,1),1),
TRUE ~ sample(c(0,1,1,1),1)
), #American locations thrice as likely to be treated
policy_year = case_when(
usa == 1 ~ sample(c(2019,2020,2021,2022,2023, rep(0,15)),1),
usa == 0 ~ sample(c(2019,2020,2021,2022,2023, rep(0,5)),1)
)
) %>%
rowwise() %>%
mutate(treated = case_when(g<=year & g!=0 ~ 1,
TRUE ~ 0),
policy = case_when(policy_year<=year & policy_year !=0 ~ 1,
TRUE ~ 0),
revenue = 1000000
+ policy * -200000
+ treated * 100000
+ rnorm(n=1, mean =0, sd = 100000) # error w/ mean 0 & sd= 100k
)
}
#A function to run a simulation 1 time and run estimators
get_est_4 <- function(...) { # '...' must be included for map_dfr to work
myData <- create_data_4()
#Run our three estimators
output_conditional <- my_event_study(myData, xformla = ~policy, true_effect = true_effect) %>%
mutate(conditioning = 1)
output_unconditional <- my_event_study(myData, true_effect = true_effect) %>%
mutate(conditioning = 0)
rbind(output_conditional, output_unconditional)
}
output <- get_est_4()
#For reproducibility
set.seed(123)
#Run simulation multiple times & save mean output.
output <- map_dfr(1:25, get_est_4) %>% #Run sim n_sim times & rbind() outputs
group_by(term, estimator, conditioning) %>%
summarise(across(everything(), mean))
#Plot results w/o conditioning in policy variable
plot_event_study(filter(output, conditioning == 0)) +
geom_line(aes(x = term,  y=true_effect), color = "red")
#Plot results w/ conditioning in policy variable
plot_event_study(filter(output, conditioning == 1)) +
geom_line(aes(x = term,  y=true_effect), color = "red")
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
