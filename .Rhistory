),
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "TWFE",
xformla = ~ factor(usa_year),
data = myData
)
)
output
}
#For reproducibility
set.seed(97)
#Run simulation multiple times & save mean output.
output <- map_dfr(1:n_sim, get_est_cs_3) %>% #Run sim n_sim times & rbind() outputs
group_by(term, estimator) %>%
summarise(across(everything(), mean))
#Add column for true effect to DF of estimates
output <- left_join(output, true_effect, by = "term")
my_event_plot(output,
plot_title = "Estimating the Effects Using Callaway and Sant'Anna <i>With</i> Conditioning on Covariates") +
theme(strip.text = element_blank(),
legend.position = c(0.0375, 1.065))
#A function to simulate data 1 time and run CS estimator
get_est_cs_3 <- function(...) { # '...' must be included for map_dfr to work
myData <- create_data_3()
#Run our Callaway and Sant'Anna estimator
output <- event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did",
xformla = ~ usa,
data = myData
) %>%
rbind(
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did2s",
xformla = ~ factor(usa_year),
data = myData
),
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "TWFE",
xformla = ~ factor(usa_year),
data = myData
)
)
output
}
#For reproducibility
set.seed(97)
#Run simulation multiple times & save mean output.
output <- map_dfr(1:n_sim, get_est_cs_3) %>% #Run sim n_sim times & rbind() outputs
group_by(term, estimator) %>%
summarise(across(everything(), mean))
#Add column for true effect to DF of estimates
output <- left_join(output, true_effect, by = "term")
my_event_plot(output,
plot_title = "Estimating the Effects <i>With</i> Conditioning on Covariates*") +
labs(caption = "For Callaway and Sant'Anna, we condition on the time-constant covariate itself. For the other two, we condition on an interaction between the time-constant covariate and a period dummy")
## Event study and plot functions
# Event study funciton to calculate just our three estimators
my_event_study <- function(data, xformla = NULL, true_effect) {
rbind(
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "TWFE",
xformla = xformla,
data = data
),
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did2s",
xformla = xformla,
data =data
),
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did",
xformla = xformla,
data = data
)
) %>%
left_join(true_effect, by = "term")
}
#Save a color pallette for my plots
myPal <-  brewer.pal(n=4, name = "Set1")
# My own event study plot function
my_event_plot <-  function(data, plot_title = "") {
data %>%
mutate(conf_low = estimate - 1.96 * std.error, #Confidence bands
conf_high = estimate + 1.96 * std.error,
estimator = case_when( #Pub years are not correct in package
estimator == "Callaway and Sant'Anna (2020)" ~ "Callaway and Sant'Anna (2021)",
estimator == "Gardner (2021)" ~ "Gardner (2022)",
TRUE ~ estimator
),
pre_post = case_when(term < 0 ~ "pre",
TRUE ~ "post")
) %>%
ggplot(aes(x=term, y=estimate, color = estimator, shape = estimator)) +
facet_wrap(~estimator, scales = "free") + #separate panels for each estimator
geom_line(aes(x = term, y=true_effect, group=pre_post, linetype = "solid"), #Line for true effect
color = myPal[1], linewidth = 0.75) +
geom_point() + #Point estimates
geom_errorbar(aes(ymin=conf_low, ymax=conf_high)) +  #Confidence bands
geom_vline(xintercept = -0.5, linetype = "dashed") +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_y_continuous(labels = scales::comma,
name = "Point Estimates With 95% Confidence Intervals") +
scale_linetype_manual(values = "solid", name = "", labels = "True Effect") +
scale_color_manual(values=c(myPal[2], myPal[3], myPal[4]),
name = "") +
scale_shape_manual(values = c(15,16,17),
name = "") +
xlab("Event Time") +
ggtitle(plot_title, subtitle = "\n") + #make room for legend in top-left
theme_classic() +
theme(
axis.line = element_line(color="grey"),
axis.ticks = element_line(color = "grey"),
axis.title.y = element_text(margin = margin(0,12,0,6),
size = 12,
color = "grey30"),
axis.title.x = element_text(margin = margin(12,0,6,0),
size = 12,
color = "grey30"),
axis.text = element_text(color = "grey30"),
legend.position = c(0.175,1.15),
legend.direction = "horizontal",
legend.margin = margin(0),
legend.text = element_text(size = 12),
plot.title.position = "plot",
strip.text = element_text(margin = margin(12,0,12,0),
hjust = 0.01,
size = 12,
color = "grey30"),
strip.background = element_blank(),
plot.title = element_textbox_simple(margin = margin(6,0,18,0),
size = 16
),
plot.caption = element_textbox_simple(size = 8,
color = "grey30")
)
}
#A function to simulate data 1 time and run CS estimator
get_est_cs_3 <- function(...) { # '...' must be included for map_dfr to work
myData <- create_data_3()
#Run our Callaway and Sant'Anna estimator
output <- event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did",
xformla = ~ usa,
data = myData
) %>%
rbind(
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did2s",
xformla = ~ factor(usa_year),
data = myData
),
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "TWFE",
xformla = ~ factor(usa_year),
data = myData
)
)
output
}
#For reproducibility
set.seed(97)
#Run simulation multiple times & save mean output.
output <- map_dfr(1:n_sim, get_est_cs_3) %>% #Run sim n_sim times & rbind() outputs
group_by(term, estimator) %>%
summarise(across(everything(), mean))
#Add column for true effect to DF of estimates
output <- left_join(output, true_effect, by = "term")
my_event_plot(output,
plot_title = "Estimating the Effects <i>With</i> Conditioning on Covariates*") +
labs(caption = "For Callaway and Sant'Anna, we condition on the time-constant covariate itself. For the other two, we condition on an interaction between the time-constant covariate and a period dummy")
## Event study and plot functions
# Event study funciton to calculate just our three estimators
my_event_study <- function(data, xformla = NULL, true_effect) {
rbind(
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "TWFE",
xformla = xformla,
data = data
),
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did2s",
xformla = xformla,
data =data
),
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did",
xformla = xformla,
data = data
)
) %>%
left_join(true_effect, by = "term")
}
#Save a color pallette for my plots
myPal <-  brewer.pal(n=4, name = "Set1")
# My own event study plot function
my_event_plot <-  function(data, plot_title = "") {
data %>%
mutate(conf_low = estimate - 1.96 * std.error, #Confidence bands
conf_high = estimate + 1.96 * std.error,
estimator = case_when( #Pub years are not correct in package
estimator == "Callaway and Sant'Anna (2020)" ~ "Callaway and Sant'Anna (2021)",
estimator == "Gardner (2021)" ~ "Gardner (2022)",
TRUE ~ estimator
),
pre_post = case_when(term < 0 ~ "pre",
TRUE ~ "post")
) %>%
ggplot(aes(x=term, y=estimate, color = estimator, shape = estimator)) +
facet_wrap(~estimator, scales = "free") + #separate panels for each estimator
geom_line(aes(x = term, y=true_effect, group=pre_post, linetype = "solid"), #Line for true effect
color = myPal[1], linewidth = 0.75) +
geom_point() + #Point estimates
geom_errorbar(aes(ymin=conf_low, ymax=conf_high)) +  #Confidence bands
geom_vline(xintercept = -0.5, linetype = "dashed") +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_y_continuous(labels = scales::comma,
name = "Point Estimates With 95% Confidence Intervals") +
scale_linetype_manual(values = "solid", name = "", labels = "True Effect") +
scale_color_manual(values=c(myPal[2], myPal[3], myPal[4]),
name = "") +
scale_shape_manual(values = c(15,16,17),
name = "") +
xlab("Event Time") +
ggtitle(plot_title, subtitle = "\n") + #make room for legend in top-left
theme_classic() +
theme(
axis.line = element_line(color="grey"),
axis.ticks = element_line(color = "grey"),
axis.title.y = element_text(margin = margin(0,12,0,6),
size = 12,
color = "grey30"),
axis.title.x = element_text(margin = margin(12,0,6,0),
size = 12,
color = "grey30"),
axis.text = element_text(color = "grey30"),
legend.position = c(0.175,1.15),
legend.direction = "horizontal",
legend.margin = margin(0),
legend.text = element_text(size = 12),
plot.title.position = "plot",
strip.text = element_text(margin = margin(12,0,12,0),
hjust = 0.01,
size = 12,
color = "grey30"),
strip.background = element_blank(),
plot.title = element_textbox_simple(margin = margin(6,0,18,0),
size = 16
),
plot.caption = element_textbox_simple(margin = margin(6,0,6,0),
size = 8,
color = "grey30",
position = "plot")
)
}
# my_event_plot(output,
#               plot_title = "Testing Testing Testing 123")
#A function to simulate data 1 time and run CS estimator
get_est_cs_3 <- function(...) { # '...' must be included for map_dfr to work
myData <- create_data_3()
#Run our Callaway and Sant'Anna estimator
output <- event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did",
xformla = ~ usa,
data = myData
) %>%
rbind(
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did2s",
xformla = ~ factor(usa_year),
data = myData
),
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "TWFE",
xformla = ~ factor(usa_year),
data = myData
)
)
output
}
#For reproducibility
set.seed(97)
#Run simulation multiple times & save mean output.
output <- map_dfr(1:n_sim, get_est_cs_3) %>% #Run sim n_sim times & rbind() outputs
group_by(term, estimator) %>%
summarise(across(everything(), mean))
#Add column for true effect to DF of estimates
output <- left_join(output, true_effect, by = "term")
my_event_plot(output,
plot_title = "Estimating the Effects <i>With</i> Conditioning on Covariates*") +
labs(caption = "*For Callaway and Sant'Anna, we condition on the time-constant covariate itself. For the other two, we condition on an interaction between the time-constant covariate and a period dummy")
## Event study and plot functions
# Event study funciton to calculate just our three estimators
my_event_study <- function(data, xformla = NULL, true_effect) {
rbind(
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "TWFE",
xformla = xformla,
data = data
),
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did2s",
xformla = xformla,
data =data
),
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did",
xformla = xformla,
data = data
)
) %>%
left_join(true_effect, by = "term")
}
#Save a color pallette for my plots
myPal <-  brewer.pal(n=4, name = "Set1")
# My own event study plot function
my_event_plot <-  function(data, plot_title = "") {
data %>%
mutate(conf_low = estimate - 1.96 * std.error, #Confidence bands
conf_high = estimate + 1.96 * std.error,
estimator = case_when( #Pub years are not correct in package
estimator == "Callaway and Sant'Anna (2020)" ~ "Callaway and Sant'Anna (2021)",
estimator == "Gardner (2021)" ~ "Gardner (2022)",
TRUE ~ estimator
),
pre_post = case_when(term < 0 ~ "pre",
TRUE ~ "post")
) %>%
ggplot(aes(x=term, y=estimate, color = estimator, shape = estimator)) +
facet_wrap(~estimator, scales = "free") + #separate panels for each estimator
geom_line(aes(x = term, y=true_effect, group=pre_post, linetype = "solid"), #Line for true effect
color = myPal[1], linewidth = 0.75) +
geom_point() + #Point estimates
geom_errorbar(aes(ymin=conf_low, ymax=conf_high)) +  #Confidence bands
geom_vline(xintercept = -0.5, linetype = "dashed") +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_y_continuous(labels = scales::comma,
name = "Point Estimates With 95% Confidence Intervals") +
scale_linetype_manual(values = "solid", name = "", labels = "True Effect") +
scale_color_manual(values=c(myPal[2], myPal[3], myPal[4]),
name = "") +
scale_shape_manual(values = c(15,16,17),
name = "") +
xlab("Event Time") +
ggtitle(plot_title, subtitle = "\n") + #make room for legend in top-left
theme_classic() +
theme(
axis.line = element_line(color="grey"),
axis.ticks = element_line(color = "grey"),
axis.title.y = element_text(margin = margin(0,12,0,6),
size = 12,
color = "grey30"),
axis.title.x = element_text(margin = margin(12,0,6,0),
size = 12,
color = "grey30"),
axis.text = element_text(color = "grey30"),
legend.position = c(0.175,1.15),
legend.direction = "horizontal",
legend.margin = margin(0),
legend.text = element_text(size = 12),
plot.title.position = "plot",
strip.text = element_text(margin = margin(12,0,12,0),
hjust = 0.01,
size = 12,
color = "grey30"),
strip.background = element_blank(),
plot.title = element_textbox_simple(margin = margin(6,0,18,0),
size = 16
),
plot.caption = element_textbox_simple(margin = margin(6,0,6,0),
size = 8,
color = "grey30"),
plot.caption.position = "plot"
)
}
# my_event_plot(output,
#               plot_title = "Testing Testing Testing 123")
#A function to simulate data 1 time and run CS estimator
get_est_cs_3 <- function(...) { # '...' must be included for map_dfr to work
myData <- create_data_3()
#Run our Callaway and Sant'Anna estimator
output <- event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did",
xformla = ~ usa,
data = myData
) %>%
rbind(
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "did2s",
xformla = ~ factor(usa_year),
data = myData
),
event_study(
yname = "revenue",
tname = "year",
idname = "id",
gname = "g",
estimator = "TWFE",
xformla = ~ factor(usa_year),
data = myData
)
)
output
}
#For reproducibility
set.seed(97)
#Run simulation multiple times & save mean output.
output <- map_dfr(1:n_sim, get_est_cs_3) %>% #Run sim n_sim times & rbind() outputs
group_by(term, estimator) %>%
summarise(across(everything(), mean))
#Add column for true effect to DF of estimates
output <- left_join(output, true_effect, by = "term")
my_event_plot(output,
plot_title = "Estimating the Effects <i>With</i> Conditioning on Covariates*") +
labs(caption = "*For Callaway and Sant'Anna, we condition on the time-constant covariate itself. For the other two, we condition on an interaction between the time-constant covariate and a period dummy")
#Load packages and install if not installed
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
tidyverse,    # Grammar for data + ggplot2
did,          # Callaway and Sant'Anna
did2s,        # Gardner
data.table,   # Easy to make data tables
knitr,        # Print pretty tables
ggtext,       # Fancy ggplot text (e.g. italics)
RColorBrewer, # Colour palettes
fastDummies   # Easy to make dummy variables
)
?did2s
